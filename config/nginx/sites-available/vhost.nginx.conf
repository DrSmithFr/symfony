# remenber to add the following line to your /etc/host file
# echo "127.0.0.1       skeleton" >> /etc/hosts
# to enable the skeleton hostname
server {
    server_name skeleton;
    listen 443 ssl http2;

    # your SSL certificate and key
    # you can use https://github.com/DrSmithFr/ssl-localhost to generate them
    # don't forget to add the Root Certificat to your trusted CA
    # or generate a self-signed certificate and add it to your trusted CA
    ssl_certificate        {PATH_TO_PROJECT_CRT}/server.crt;
    ssl_certificate_key    {PATH_TO_PROJECT_CRT}/server.key;

    root {PATH_TO_PROJECT}/public;

    location / {
        # try to serve file directly, fallback to index.php
        try_files $uri /index.php$is_args$args;
    }

    # (Production)
    # optionally disable falling back to PHP script for the asset directories;
    # nginx will return a 404 error when files are not found instead of passing the
    # request to Symfony (improves performance but Symfony's 404 page is not displayed)
    # location /bundles {
    #     try_files $uri =404;
    # }

    location ~ ^/(index)\.php(/|$) {
        fastcgi_param SERVER_NAME $server_name;
        fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;

        # optionally set the value of the environment variables used in the application
        # fastcgi_param APP_ENV prod;
        # fastcgi_param APP_SECRET <app-secret-id>;
        # fastcgi_param DATABASE_URL "mysql://db_user:db_pass@host:3306/db_name";

        # When you are using symlinks to link the document root to the
        # current version of your application, you should pass the real
        # application path instead of the path to the symlink to PHP
        # FPM.
        # Otherwise, PHP's OPcache may not properly detect changes to
        # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
        # for more information).
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        # Prevents URIs that include the front controller. This will 404:
        # http://domain.tld/index.php/some-path
        # Remove the internal directive to allow URIs like this
        internal;

        # Simple requests
        if ($request_method ~* "(GET|POST|PUT|PATCH|DELETE)") {
          add_header 'Access-Control-Allow-Origin' '*' always;
        }

        # Preflighted requests
        if ($request_method = OPTIONS ) {
          add_header 'Access-Control-Allow-Origin' '*' always;
          add_header "Access-Control-Allow-Methods" "GET, POST, PUT, PATCH, OPTIONS, HEAD, DELETE";
          add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
          return 200;
        }
    }

    # return 404 for all other php files not matching the front controller
    # this prevents access to other php files you don't want to be accessible.
    location ~ \.php$ {
        return 404;
    }

    error_log /var/log/nginx/skeleton_error.log;
    access_log /var/log/nginx/skeleton_access.log;
}

server {
  listen 80;
  server_name skeleton;
  return 301 https://$server_name$request_uri;
}

#Allow PHPStorm xdebug validation script (need http)
server {
    listen 80;
    server_name skeleton;

    root {PATH_TO_PROJECT}/public;

    # Allow PHPStorm xdebug validation script
    location ~ \.php$ {
        fastcgi_param SERVER_NAME $server_name;
        fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;

        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
    }

    error_log /var/log/nginx/ms-base_error.log;
    access_log /var/log/nginx/ms-base_access.log;
}
